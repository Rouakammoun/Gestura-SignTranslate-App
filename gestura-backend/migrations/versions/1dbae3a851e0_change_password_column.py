"""change password column

Revision ID: 1dbae3a851e0
Revises: 
Create Date: 2025-04-25 18:54:06.172336

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1dbae3a851e0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('feedback', schema=None) as batch_op:
        batch_op.drop_index('idx_feedback_user_id')
        batch_op.drop_constraint('fk_user', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])
        batch_op.drop_table_comment(
        existing_comment='Stores user feedback with ratings and comments'
    )

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('password_hash', sa.String(length=255), nullable=False))
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=120),
               existing_nullable=False)
        batch_op.alter_column('application_language',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.String(length=20),
               existing_nullable=True)
        batch_op.alter_column('profile_image',
               existing_type=postgresql.ARRAY(sa.VARCHAR(length=500)),
               comment=None,
               existing_comment='character varying(500);',
               existing_nullable=True)
        batch_op.alter_column('terms_accepted',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
        batch_op.drop_constraint('users_email_key', type_='unique')
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.drop_column('password')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.create_unique_constraint('users_email_key', ['email'])
        batch_op.alter_column('terms_accepted',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
        batch_op.alter_column('profile_image',
               existing_type=postgresql.ARRAY(sa.VARCHAR(length=500)),
               comment='character varying(500);',
               existing_nullable=True)
        batch_op.alter_column('application_language',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=10),
               existing_nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.drop_column('password_hash')

    with op.batch_alter_table('feedback', schema=None) as batch_op:
        batch_op.create_table_comment(
        'Stores user feedback with ratings and comments',
        existing_comment=None
    )
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_user', 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.create_index('idx_feedback_user_id', ['user_id'], unique=False)

    # ### end Alembic commands ###
